// WHILE É UM LAÇO DE REPETIÇÃO. ENTRETANTO, DIFERENTE DO FOR, O WHILE PODE SER EXECUTADO INFINITAMENTE
// TRADUZIDO SERIA: ENQUANTO
// USA COMO PARAMETRO UM VALOR BOOLEANO

// OU SEJA, COLOCAMOS UM PARAMETRO PARA O WHILE, ENQUANTO O PARAMETRO FOR VERDADEIRO O LAÇO DE REPETIÇÃO SERÁ EXECUTADO, SE FOR FALSO, A REPETIÇÃO SERÁ ENCERRADA.


// JÁ O DO/WHILE TEM UMA DIFERENÇA PRINCIPAL. O DO/WHILE SERÁ EXECUTADO PELO MENOS UMAS VEZ.

//ESTRUTURA WHILE:
let opcao = 3

while (opcao != 3) {
    console.log("seu número ainda não é 3!")
}


// ESTRUTURA DO/WHILE:
let opcao2 = 3

do {
    console.log('sua opção ainda não é 3!')
} while (opcao2 != 3)


// PERCEBA QUE SE O PARAMETRO FOR VERDADEIRO, O CÓDIGO SERÁ EXECUTADO INFINITAMENTE NOS DOIS CASOS.
// ENTRETANTO, SE O PARAMETRO FOR FALSO, O LAÇO DE REPETIÇÃO SERÁ QUEBRADO NOS DOIS CASOS TAMBÉM.

// OS DOIS CÓDIGOS ACIMA EXECUTAM A MESMA COISA, SENDO A DIFERENÇA: NO WHILE: O PARAMETRO É FALSO, LOGO NÃO SERÁ EXECUTADO NENHUMA VEZ. JÁ O DO/WHILE É EXECUTADO PELO MENOS UMA VEZ, MESMO QUE SEU PARAMETRO SEJA FALSO.

// ISSO SE DA POIS A CONDIÇÃO DA ESTRUTURA FOI POSTA APÓS A EXECUÇÃO DO CÓDIGO.

// OUTRA DIFERENÇA IMPORTANTE: Diferente da estrutura While, o Do/While não é necessário atribuir um valor inicial para a variável.