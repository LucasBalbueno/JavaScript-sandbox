// FUNÇÃO SEM RETORNO
function imprimirSoma(a,b) {
    console.log(a + b)
}

imprimirSoma(2, 5)
imprimirSoma(3)            // É POSSIVEL PASSAR APENAS UM PARAMETRO MESMO QUE A FUNÇÃO PEÇA DOIS. NESSE CADO O SEGUNDO PARAMETRO SERÁ UNDEFINED E O RESULTADO SERÁ NaN
imprimirSoma(2, 10, 4, 5, 6, 7, 8)    // TAMBÉM É POSSIVEL PASSAR MAIS PARAMETROS DO QUE A FUNÇÃO PEDE, MAS NESSE CASO ELE USARÁ APENAS OS PRIMEIROS QUE ELE PRECIA E O RESTO SERÁ IGNORADO


// FUNÇÃO COM RETORNO
function soma (a, b = 0) {           // PODEMOS ATRIBUIR VALORES PADRÕES NOS PARAMETROS DA FUNÇÃO. ESSES VALORES PADRÕES SERÃO USADOS CASO O PARAMETRO NÃO SEJA DEFINIDO
    return a + b;                // USAMOS RETURN QUANDO O BLOCO DE CÓDIGO DA FUNÇÃO NÃO POSSUI NENHUM COMANDO DE SAÍDA DE DADOS
}

console.log(soma(2, 6))         // RETORNA 8
console.log(soma(5))      // RETORNA 5. NÃO RETORNOU NaN POIS O PARAMETRO B RECEBE VALOR PADRÃO 0


// FUNÇÃO ANONIMA (GUARDADA EM UMA VARIAVEL)
const multiplicacao = function (a, b) {          // A FUNÇÃO ANONIMA É A FUNÇÃO QUE NÃO POSSUI UM NOME ATRIBUIDO A ELA POIS A FUNÇÃO ESTÁ ATRIBUIDA A UMA VARIAVEL
    return a * b                               // É UMA FORMA DE GUARDAR A FUNÇÃO EM UMA VARIAVEL
}

console.log(multiplicacao(3, 5))

// ARROW FUNCTION (SIMPLIFICAÇÃO DA SINTAXE FUNCTION)
const divisao = (a, b) => {                  // ARROW FUNCTION É UMA FORMA REDUZIDA DE ESCREVER A SINTAXE DA FUNÇÃO
    console.log(a/b)                       // ARROW FUNCTION É GUARDADA DENTRO DE UMA VARIAVEL, LOGO ELA TAMBÉM É UMA FUNÇÃO ANONIMA
}

divisao(25, 5)

//RETORNO IMPLÍCITO (SIMPLIFICAÇÃO DA SINTAXE ARROW FUNCTION)
const subtracao = (a, b) => a - b           // O RETORNO IMPLICITO É UMA FORMA BEM SIMPLES DE ESCREVER UMA FUNÇÃO QUE EXECUTA APENAS UMA LINHA (POIS NÃO ABRIMOS UM {BLOCO DE CÓDIGO}). ALÉM DISSO, TUDO O QUE ESTÁ NESSA LINHA É RETORNAVEL, TIRANDO A NECESSIDADE DE USAR RETURN