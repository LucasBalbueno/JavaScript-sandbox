// O OPERADOR DESCTUCTURING É USADO PARA DESTRUTURAR ALGUM ELEMENTO DO JS, NO CASO DE UM ARRAY (EXTRAIR COM INDICE), NO CASO DE UM OBJETO (EXTRAIR UMA VALOR)...
// INTRODUZIDO NO ES2015 (ECMA JS)

const pessoa = {
    nome: 'Ana',
    idade: 5,
    endereco: {
        rua: 'ABC',
        numero: 100
    }
}

// DESTRUCTURING É UMA FORMA SIMPLIFICADA DE TIRAR ATRIBUTOS DE DENTRO DE UMA ESTRUTURA

const { nome, idade } = pessoa        // OPERADOR DESTRUCTURING. SINTAXE USA CHAVE POIS NOS REFEREIMOS A UM OBJETO
console.log(nome, idade)

// TAMBÉM PODEMOS EXTRARIR ATRIBUTOS DENTRO DE ATRIBUTOS:
const { endereco: {rua, numero}} = pessoa        // PARA OBJETOS ANINHADOS, DEVEMOS TER CERTEZA QUE SEU CAMINHO EXISTA PARA NÃO DA ERRO, POIS APENAS O ULTIMO ATRIVUTO PODE SER null OU undefined. EXEMPLO: SE endereco NÃO EXISTISSE CAUSARIA ERRO
console.log(rua, numero)

// HÁ COMO TROCAR O NOME DA CHAVE DO OBJETO COM DESTRUCTURING
const { nome: n, idade: i } = pessoa
console.log(n, i)

// QUANDO USAMOS DESTRUCTURING PARA EXTRAIR UM ATRIBURO QUE NÃO EXISTE NOS RETORNA undefined
const { sobrenome, pais = true} = pessoa           // MAS AINDA PODEMOS DEFINIR UM VALOR PADRÃO PARA O ATRIBUTO, CASO ELE NÃO EXISTA
console.log(sobrenome, pais)

console.log('=========================================================')
// =====================================================================

// USANDO O DESTRUCTURING EM ARRAY, PODEMOS EXTRARIR ATRIBUTOS PARA TAMBÉM ATRIBUIR A ELES UM VALOR
const [ a ] = [10]                 // AQUI ESTAMOS DESESTRUTURANDO O ARRAY a E ATRIBUINDO O PRIMEIRO VALOR 10
console.log(a)

const [ n1, n2, , n4, n5 ] = [15, 20, 45, 20]      // TAMBÉM PODEMOS FAZER ISSO PULANDO ATRIBUTOS (QUE NA SAÍDA SERÃO undefined)
console.log(n1, n2, n4, n5)                        // ACABAMOS DE CRIAR VARIAS VARIAVEIS COM UMA LINHA APENAS

// TAMBÉM PODEMOS USAR DESTRUCTURING EM ARRAY MATRIZES/ ARRAYS ANINHADAS
const [, [, nota,]] = [[, 4, 5], [9 ,10]]          //PULAMOS O PRIMEIRO ARRAY E PULAMOS O PRIMEIRO ELEMENTO DO SEGUNDO ARRAY, ASSIM EXTRAINDO O SEGUNDO ELEMENTO DO SEGUNDO ARRAY
console.log(nota)

// AO CONTRÁRIO DO OBJETO, QUANDO DESESTUTURAMOS UM ATRIBUTO QUE NÃO EXISTE, AO INVÉS DE VOLTAR undefined, PODEMOS ATRIBUIR UM VALOR A ELE DEPOIS DE '='
// DESTRUTURING NÃO É USADO COM MUITA FREQUENCIA POR SER DE DIFICIL LEITURA. MAS É MUITO IMPORTANTE PARA ENTENDERMOS A LINGUAGEM JS.